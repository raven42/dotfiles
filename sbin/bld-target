#!/bin/bash
#

user=${USER}
orig_dir=`pwd`
prog=`basename $0`

usage="Target Usage: $prog [<options>]
 Prerequisites:
   * GIT_REPO/GIT_ROOT needs to be a bash env variable set to your /work workspace

 Options:
   -<platform>      compile platform(s): lando (harpoon), awing, gen6, dart
   -swbd <#>        compile specific swbd
   -pretend|-p      Show what commands would be run but don't execute
   -verbose|-v      Use the verbose flags when running crave
   -default         Show / Set the specified swbd as default for future operations

 Examples
   '$prog -lando'
   '$prog -swbd 148'
"

shrt_opts=pvhs:
long_opts=pretend,verbose,help,swbd:,skybolt,sb,lando,dcx,gen6,awing,dart

exec=
verbose=0
bld_target=

if [ $GIT_ROOT ]; then
	target_rc=${GIT_ROOT}/.rc/bld_target.sh
else
	target_rc=${HOME}/.default/bld_target.sh
fi

# The following are used to set the pyuniti default tbc file
pyuniti_config=${HOME}/.pyuniti/config.ini
default_tbc_list=()
default_tbc_list+=("swbd178"	"awing63.tbc")
default_tbc_list+=("swbd165"	"ven60.tbc")
default_tbc_list+=("swbd190"	"dart102.tbc")
max=${#default_tbc_list[@]}
let max=max-1
arg_dist=0
arg_tbc=1
arg_count=2

# Process the command line arguments
optarg=0
opts=`getopt -n $prog -o $shrt_opts -ual $long_opts -- $@`

eval set -- "$opts"

while [ $1 != -- ]; do

	case "$1" in
# main options
	--pretend | -p)
		mkpretend=1
		exec=echo
		;;

	--verbose | -v)
		verbose=1
		;;

	--help)
		echo "$usage"
		exit 1
		;;

# platform types
	-s | --swbd)
		bld_target=$2
		shift
		;;

	--dcx)
		bld_target="swbd62"
		;;

	--skybolt | --sb)
		bld_target="swbd148"
		;;

	--lando)
		bld_target="swbd165"
		;;

	--awing)
		bld_target="swbd178"
		;;

	--dart)
		bld_target="swbd190"
		;;

	-h | --help)
		echo "$usage"
		exit 0
		;;

	--)
		#ignore
		;;

	*)
		makeflags="$makeflags $opt"
		;;

	esac
	shift
done
shift # move past the '--' from the getopt call

if [ $# -eq 1 ]; then
	bld_target=$1
elif [ $# -gt 0 ]; then
	echo "Invalid argument: $@"
	echo ""
	echo "$usage"
	echo ""
	exit 1
fi

# Handle default command to set or show the default
if [ "${bld_target}" == "" ]; then
	echo "Current build bld_target is BLD_TARGET=${BLD_TARGET}"
else
	echo "export BLD_TARGET=${bld_target}" > $target_rc
	echo "Set new default BLD_TARGET=${bld_target} in [${target_rc}]"
	. $target_rc
fi

# Now check if we should set the pyuniti default tbc
if [ -f $pyuniti_config ]; then
	found=0
	for i in `seq 0 $arg_count $max`; do
		dist=${default_tbc_list[$i+$arg_dist]}
		if [ "$bld_target" == "$dist" ]; then
			pyuniti_tbc=${default_tbc_list[$i+$arg_tbc]}
			found=1
			break
		fi
	done

	if [ $found -eq 1 ]; then
		cp ${pyuniti_config} ${pyuniti_config}.bak
		cat ${pyuniti_config} | sed -e 's|^\(tbc=.*\)/.*|\1/'${pyuniti_tbc}'|' > ${pyuniti_config}.new
		mv ${pyuniti_config}.new ${pyuniti_config}
		echo "pyuniti tbc set to:$(grep '^tbc=' ${pyuniti_config})"
	fi

fi
exit 0
