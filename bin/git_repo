#!/bin/bash
#

# git_path is the root location where this users git repositories are stored
# change this as needed for each user, or can come up with a common method to
# store local git repos for everybody

usr=$USER
prog=`basename $0`

usage="Usage: $prog [-usr <username>] [<repo>]"

# Git server definitions
git_server=git@github-bsn.broadcom.com
repo=bsnfos.git

find_depth=4

# Read in command line options
while [ "$#" -gt "0" ]; do

	if [ "$1" == "-usr" ]; then
		shift
		usr=$1
	elif [ "$1" == "-user" ]; then
		shift
		usr=$1
	elif [ "$1" == "-repo" ]; then
		shift
		repo=$1
		if [ "${repo: -4}" != ".git" ]; then
			repo="$1.git"
		fi
	else
		git_repo=$1
	fi

	shift
done

# Define the workspace for the specified user
workspace=`grep ${usr} /projects/devop_metadata/LATEST_ZZMAP | cut -d: -f 2`
remote_repo=san/${repo}

# Look for default git root directory
if [ ! ${workspace/$'\n'/} ]; then
	echo ""
	echo "Workspace not defined for user:${usr}."
	if [ "${usr}" == "${USER}" ]; then
		echo "Please contact SRE to get a /zzz/work## workspace assigned."
	fi
	echo ""
	exit 1
fi

# If local-repo not specified, list existing repositories and query for repo
if [ "$git_repo" == "" ]; then
	echo "Repo not specified."
	echo ""
	for path in ${workspace}; do
		cd ${path}
		find . -maxdepth ${find_depth} -name dyn_view_rstg -prune -o -name vobs -prune -o -name .git | grep "\.git" | sed -e 's|^\./||' -e 's|/\.git||'
	done
	echo ""
	read -p "Specify repository: " git_repo
fi

# Loop through directories in workspace looking for a match
paths=0
for path in ${workspace}; do
	if  [ -d ${path}/${git_repo} ]; then
		git_path=${path}
		break;
	fi
	let paths+=1
done

if [ ! ${git_path} ]; then
	echo "Repository ${git_repo} not found. Existing repositories:"
	echo ""
	for path in ${workspace}; do
		cd ${path}
		find . -maxdepth ${find_depth} -name dyn_view_rstg -prune -o -name vobs -prune -o -name .git | grep "\.git" | sed -e 's|^\./||' -e 's|/\.git||'
	done
	echo ""
	while true; do
		read -p "Would you like to create a new repository? [y/n]: " yn
		case $yn in
		[Yy]*) break;;
		[Nn]*) exit 1;;
		* ) echo "Please answer yes or no.";;
		esac
	done

	if [ $paths -gt 1 ]; then
		echo ""
		echo "Available paths:"
		echo ""
		echo "${workspace}"
		echo ""
		read -p "Which path do you want to store the new repo: " git_path
		echo ""
	else
		git_path=$path
	fi

	if [ ! -d ${git_path} ]; then
		echo "GIT path:${git_path} does not exist. Unable to proceed."
		exit 1
	fi

	mkdir ${git_path}/${git_repo}
fi

git_root=${git_path}/${git_repo}

# Check if there is a repo already cloned here
if [ ! -d ${git_root}/.git ]; then
	echo "Did not find expected local repo. Suspect no repository has been cloned."
	while true; do
		read -p "Do you wish to clone a repo from ${git_server}? [y/n]: " yn
		case $yn in

		[Yy]*)
			cd ${git_path}
			echo ""
			echo "Available branches:"
			echo ""
			git ls-remote --head ${git_server}:${remote_repo} | sed -e 's|.*refs/heads/||' | grep -v priv
			echo ""
			read -p "Which branch do you want to clone: " branch
			echo ""
			git clone -b ${branch} ${git_server}:${remote_repo} ${git_repo}
			if [ $? -ne 0 ]; then
				echo "Clone failed. Unable to create repository."
				exit 1
			fi
			echo ""
			break
			;;

		[Nn]*) break;;
		* ) echo "Please answer yes or no.";;
		esac
	done
fi

env GIT_ROOT=${git_root} GIT_PATH=`dirname ${git_root}` GIT_REPO=`basename ${git_root}` GIT_DIR=${git_root}/.git GIT_WORK_TREE=${git_root} ${SHELL} ; exit
